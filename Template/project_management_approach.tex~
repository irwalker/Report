\chapter{Methodology}\label{C:us}

\section{Project Management Approach}

The project was structured around a loose waterfall approach. At the start of the project, a long-term plan and major milestones were outlined. More detailed plans were added and target dates adjusted as the year progressed. Aspects of agile development practices were also used during the implementation and design stages. Throughout the project I had joint weekly meetings with Dr. Kris Bubendorfer,  Ferry Hendrikx and Filip Dimitrievski. In these meetings, 30-45 minutes in length, we were able to outline progress achieved during the week, any issues encountered,and solidify project direction. Having meetings with Filip and Ferry present was beneficial, as there were aspects of the project which Filip and I were able to collaborate over. Ferry, co-designer of the GRAft system was also able to give useful technical feedback, with his experience in the development of web-scraping tools.

This approach of combining aspects of waterfall and agile was reasonably effective as a project management approach. Agile methods tend to work best in a team environment, assisting with the coordination of team members. However the method of small, focused sprints contributing to the larger project were excellent in maintaining focus and direction. The waterfall element in turn outlined the more concrete and long-term goals of the project, which was useful with monitoring and controlling and ensuring my work did not fall behind.

These target goals were met in the majority of cases. I did experience delays with finishing my implementation and evaluation, as new goals such as community detection were added late in the project. Reasons for this late discovery and delay were in part due to the exploritory nature of the project, as discussed in the design approach. %CHANGE THIS TO SPECIFIC SECTION

%Design practices - strong prototyping approach. Only way to test if sites were feasible was through building prototypes. Benefit of learning how to web-scrape pages was also covered with this approach. 

%Weekly sprints, with stories to be completed by the end of each week during implementation. 

%Weekly meetings with Dr. Kris Bubendorfer and Filip Dimitrievski, as well as Ferry Hendrikx useful to get feedback. 

%Target goals - weekly goals were met the majority of the time, but focus of the project was in flux as priorities changed during implementation. 

%The project was structured around a loose waterfall approach. At the beginning of the project, a long term plan and major milestones were outlined

\section{Design Approach}

Requirements analysis and design were completed through a combination of research and prototyping. As the project was focused on an exploration of understanding reputation data on social media, a large portion of time was given to background research. This will be covered in depth in chapter 3.

Later in the design phase, I constructed a set of prototypes to evaluate the feasiblity and alternatives for a web-scraping solution. These covered preliminary scrapers for Twitter, Facebook, LinkedIn and Slashdot. The benefit of developing these was to both give me a better understanding of technologies involved with performing these functions, and to produce some meaningful effort early in the project, as these scrapers could be potentially useful later. There were some pitfalls in this approach however. It is noted that some effort in prototyping can go to waste - and this was the case here. We eventually declared web-scraping Facebook largely infeasible, due to its user interface's constant state of flux. Also during prototyping, Twitter's API changed significantly, rendering much effort lost. 

The weekly meetings with my supervisor allowed opportunities to obtain feedback on design choices, as well as suggestions where there was room for improvement. 

%Need to discuss why such a loose project management and design style was appropriate for the project.

%Reference? Perhaps reference a prototyping design approach.
%Prototyping to achieve understanding. Weaknesses - some wasted effort. Facebook scrapers were eventually abandoned. Twitter API changed. etc etc
%Gantt Chart Here

\section{Project Complexities}

The complexity of the system stems largely from the aggregation of unstructured data from a variety of sources - a difficulty often encountered in web-crawling applications. The codebase itself is not overly complex. However, what contributed to the primary difficulty of prototype development was the development of code in the aggregation of data from disparate locations, and debugging often unclear and unexpected errors from various web requests. 

Understanding the data gathered was a time-expensive challenge. The process of understanding and defining reputation data on social media was the task that occupied most of my time on the project. 

The time constraint of 300 hours impacted the project at all stages. The implementation and evaluation components were particularly impacted - limitations had to be placed upon the scale of data collected from scrapers in order to compensate for time. In addition, the selected prototyping methodology was often expensive in terms of time, due to the necessity of revising code and collecting more relevant data, as I achived greater understanding of the problem domain. 


Understanding reputation data, and writing policies to describe reputation effectively.\\


Debugging and collection of data, and asserting that this data is avalid. Ensuring that websites were not overloaded, resulting usually in scrapers being blocked. Recovery from detection, and how scrapers can respond. Construction of useful policies, and data analysis and aggregation. 

%Aggregation of non-structured content from a variety of sources. 

%Debugging, collection of data. Avoiding detection by websites, and ensuring that websites were not overloaded, resulting usually in scrapers being blocked.
%Recovery from detection, and how scrapers can respond. Construction of useful policies, and data analysis and aggregation.

